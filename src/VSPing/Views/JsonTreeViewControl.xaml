<UserControl x:Class="IUPing.Views.JsonTreeViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:localvm="clr-namespace:IUPing.ViewModels"
             xmlns:nsjson="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <localvm:JTokenToName x:Key="jtokentoname"/>
        <localvm:JTokenTokenToChildren x:Key="jtokenToChildren"/>
        <localvm:JTokenToLevel x:Key="jtokenToLevel"/>
        <localvm:JTokenToPathDepthBoolean x:Key="jtokenToPathDepthBoolean"/>
    </UserControl.Resources>
    <TreeView x:Name="kapiTagsJson" ItemsSource="{Binding Converter={StaticResource jtokenToChildren}}">
        <TreeView.Resources>
            <HierarchicalDataTemplate DataType="{x:Type nsjson:JToken}" ItemsSource="{Binding Converter={StaticResource jtokenToChildren}}">
               <TextBox Text="{Binding Converter={StaticResource jtokentoname}, Mode=OneWay}" IsReadOnly="True" BorderThickness="0"/>
            </HierarchicalDataTemplate>
        </TreeView.Resources>
        <!-- <TreeView.ItemsSource>
            <Binding Path="SearchResponse.KapiResponseJson" Converter="{StaticResource jtokenToChildren}" Source="{StaticResource myViewModel}"/>
        </TreeView.ItemsSource>
        -->
        <TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="True"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Converter={StaticResource jtokenToPathDepthBoolean}, ConverterParameter=2}" Value="True">
                        <!-- No easy way to avoid hardcoded converter parameter-->
                        <Setter Property="IsExpanded" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </TreeView.ItemContainerStyle>
    </TreeView>
</UserControl>
